## Today

* category colors -- first two are grey and grey-- nasty

* TODO: points view needs a tablet-friendly view, because now there's room for
  multiple columns and such 

* category complete marking?

* MECHANICS:  learn issue
  - don't use user progression for learn, just do a temporary view instance-specific thing
  - maybe make a separate view for learn? subclass of practice.

* login form needs more work
 - error fields not highlighted in certain instances?
 - enter login info, then choose a language ; data deleted - must store
   temporarily until form is submitted, then delete

-- 

* MISC: clean up media-serv code a littl

* MISC: find any hardcoded 'sma' stuff ; generalize.

* global config for app instance: 
  - specifies media directory to parse
  - activity settings (can get rid of leksa_questions, etc.)
  - localization languages to use
  - which language is the language to learn ('sma')

--

* make questions all follow one generic structure, leksa_questions.yaml is too much

+ question cycle tracking ready, now just user question cycle.

* consider what client side events need logging

* simplify question concept fetching by just using the category-- no need to
  define semantics etc., except for with answer similarity, but that can be a
  filter off of the same category's concepts

* make user progression go based on a repetition count of the lessons,
  thus onece you hit end you can restart

#

* email verification? pw reset

* need a means of forcing the app to work offline, independently of whatever
  browser reports

   - online/offline detection in chrome seems to work when wireless turns off.

* things to document: 

  - http://api.mongodb.org/python/current/tutorial.html
  - auth situation
  - html5 audio issues

# Next

 * TODO: persistent storage of concepts in localStorage, block usage of
   leksa, wordlist until they're ready

   - need to be able to download and sync models from server, but rely on
     localStorage, such that models will be used from that first when present
     and when the page loads... Then trigger sync and fetch later.

# Getting going

 * http://jquerymobile.com/
 * http://backbonejs.com/
 * http://brunch.io/

## Things to read

### Offline sync thoughts

The offline aspect of this app will need to be covered in two ways: 

 * offline caching of media files
 * storage of non-media files in a local database

TODO: write readme section about all the dependencies/things synced for offline
      mode
